<?xml version="1.0" encoding="UTF-8"?>
<web-app id="WebApp_ID" version="3.0" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
    <display-name>IOW API</display-name>
   
   <listener>
        <listener-class>com.csc.fi.ioapi.config.StartUpListener</listener-class>
    </listener>

 <servlet>
      <servlet-name>jersey</servlet-name>
      <servlet-class>org.glassfish.jersey.servlet.ServletContainer</servlet-class>
     <init-param>
            <param-name>javax.ws.rs.container.ContainerRequestFilters</param-name>
            <param-value>javax.ws.rs.container.filter.GZIPContentEncodingFilter</param-value>
        </init-param>
        <init-param>
            <param-name>javax.ws.rs.container.ContainerResponseFilters</param-name>
            <param-value>javax.ws.rs.container.filter.GZIPContentEncodingFilter;com.csc.fi.ioapi.config.CustomResponseFilter</param-value> 
      </init-param>
      <init-param>
        <param-name>jersey.config.server.provider.classnames</param-name>
        <param-value>org.glassfish.jersey.media.multipart.MultiPartFeature</param-value>
      </init-param> 
      <init-param>
        <param-name>jersey.config.server.provider.packages</param-name>
        <param-value>
            io.swagger.jaxrs.listing,
            com.csc.fi.ioapi.api.usermanagement,
            com.csc.fi.ioapi.api.model,
            com.csc.fi.ioapi.api.profile,
            com.csc.fi.ioapi.api.genericapi,
            com.csc.fi.ioapi.api.concepts
        </param-value>
      </init-param>
      <load-on-startup>1</load-on-startup>
      <async-supported>true</async-supported> 
    </servlet>
    
    <servlet>
        <servlet-name>Jersey2Config</servlet-name>
        <servlet-class>io.swagger.jersey.config.JerseyJaxrsConfig</servlet-class>
        <init-param>
            <param-name>api.version</param-name>
            <param-value>1.0.0</param-value>
        </init-param>
        <init-param>
            <param-name>swagger.api.basepath</param-name>
            <param-value>/api/rest</param-value>
        </init-param>
        <load-on-startup>2</load-on-startup>
        <async-supported>true</async-supported> 
    </servlet>

    <servlet-mapping>
        <servlet-name>jersey</servlet-name>
        <url-pattern>/rest/*</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>LoginServlet</servlet-name>
        <servlet-class>com.csc.fi.ioapi.config.LoginServlet</servlet-class>
        <async-supported>true</async-supported> 
    </servlet>
    <servlet>
        <servlet-name>ResolveResource</servlet-name>
        <servlet-class>com.csc.fi.ioapi.resolve.ResolveResource</servlet-class>
        <async-supported>true</async-supported> 
    </servlet>
    <servlet-mapping>
        <servlet-name>LoginServlet</servlet-name>
        <url-pattern>/login</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>ResolveResource</servlet-name>
        <url-pattern>/resolve/*</url-pattern>
    </servlet-mapping>
    
    
    <!--
      // Ei toimi!? ... tai sama lopputulos: java.lang.IllegalStateException: A filter or servlet of the current chain does not support asynchronous operations.
        <servlet>
        <servlet-name>javax.ws.rs.core.Application</servlet-name>
         <load-on-startup>1</load-on-startup>
        <async-supported>true</async-supported> 
    </servlet>
 
    <servlet-mapping>
        <servlet-name>javax.ws.rs.core.Application</servlet-name>
        <url-pattern>/rest/*</url-pattern>
    </servlet-mapping>
    
    -->

</web-app>
